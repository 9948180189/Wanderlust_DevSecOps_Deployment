pipeline {
    agent any
      environment{
          SONAR_HOME= tool "Sonar"
      }
    
    stages {
        stage("clone the code from GitHub") {
            steps {
                git url: "https://github.com/9948180189/Wanderlust_DevSecOps_Deployment.git", branch: "main"
            }
        }
        stage('SonarQube Quality Analysis') {
            steps {
                withSonarQubeEnv("Sonar"){
                    sh "$SONAR_HOME/bin/sonar-scanner -Dsonar.projectName=wonderlust -Dsonar.projectKey=wonderlust"
                }
            }
        }
        stage('OWASP Dependency Check'){
            steps {
                dependencyCheck additionalArguments: '--scan ./', odcInstallation: 'dc'
                dependencyCheckPublisher pattern: '**/dependency-check-report.xml'
            }
        }
        stage("Sonar Quality Gate Scan"){
            steps{
                timeout(time: 2, unit: "MINUTES")
                waitForQualityGate abortPipeline: false
            }
        }
        
        stage('Trivy File System Scan') {
            steps {
                sh "trivy fs --format table -o trivy-fs-report.html ."
            }
        }
        stage("Deploy using Docker compose"){
            steps{
                sh "docker-compose up -d"
            }
        }
        
            
    }
}
